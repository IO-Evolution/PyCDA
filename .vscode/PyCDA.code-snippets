{
	// Place your PyCDA workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"RealmTypeTemplate": {
		"scope": "python",
		"prefix": "rtt",
		"body": [
			"self.name\t   = name",
			"self.realmCode  = Element.Component(CS_CodedSimpleValue, \"realmCode\", data)",
			"self.typeId\t = Element.Component(InfrastructureRootTypeId, \"typeId\", data, as_list=False)",
			"self.templateId = Element.Component(II_InstanceIdentifier, \"templateId\", data)",
			"$0"
		],
		"description": "Insert basic CDA component"
	},
	"Element Component": {
        "scope": "python",
        "prefix": "elc",
        "body": [
            "= Element.Component(${1:Type}, \"${2:Name}\", data)"
        ],
        "description": "Create Component definition"
    },
	"Element Attribute": {
        "scope": "python",
        "prefix": "ela",
        "body": [
            "= Element.Attribute(\"${1:Name}\", data)"
        ],
        "description": "Create Attribute definition"
    },
	"CDA Import": {
        "scope": "python",
        "prefix": "imp",
        "body": [
            "from .${1:FileName} import ${1:Class}$0"
        ],
        "description": "Import Class definition"
    },
	"CDA Import RTT": {
        "scope": "python",
        "prefix": "rti",
        "body": [
            "from .CS_CodedSimpleValue import CS_CodedSimpleValue",
			"from .InfrastructureRootTypeId import InfrastructureRootTypeId",
			"from .II_InstanceIdentifier import II_InstanceIdentifier",
			"$0"
        ],
        "description": "Import Class definition for RTT"
    }
}